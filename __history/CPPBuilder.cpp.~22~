#include "CPPBuilder.h"
#include "Xml.h"

void __fastcall JunYe_TValueListEditor::deleteAllRow(TValueListEditor* List){
	int rowcount = List->RowCount;
	if(rowcount > 1 && List->Keys[1] != ""){
		for(int i = 1; i < rowcount; i++){
			List->DeleteRow(1);
		}
	}
}
/*void __fastcall JunYe_TValueListEditor::saveAllRow(TValueListEditor* List, String Category){
	int rowcount = List->RowCount;
	if(rowcount > 1 && List->Keys[1] != ""){
		for(int i = 1; i < rowcount; i++){
			WriteStr(Category, List->Name + List->Keys[i], List->Values[List->Keys[i]]);
		}
	}
}
void __fastcall JunYe_TValueListEditor::saveAllRow(TValueListEditor* List, String Category, String FileName){
	//
}
void __fastcall JunYe_TValueListEditor::saveAllRow_CommonVersion(TValueListEditor* List, String Category, String parameter){
	int rowcount = List->RowCount;
	if(rowcount > 1 && List->Keys[1] != ""){
		for(int i = 1; i < rowcount; i++){
			WriteStr(Category, parameter + List->Keys[i], List->Values[List->Keys[i]]);
		}
	}
}*/
void __fastcall JunYe_TValueListEditor::insertRow(TValueListEditor* List, String Category, String key){
	String value = ReadStr(Category, List->Name + key);
	List->InsertRow(key, value, true);
}
void __fastcall JunYe_TValueListEditor::changeKeyValue(TValueListEditor* List, String Key, String Value){
	int temp;
	if(List->FindRow(Key, temp)){
		List->Values[Key] = Value;
	}
}
void __fastcall JunYe_TValueListEditor::setDropList(TValueListEditor* List, int index, TStringList* li){
	List->ItemProps[index]->EditStyle = esPickList;
	List->ItemProps[index]->PickList = li;
	List->ItemProps[index]->ReadOnly = true;
}
TStringList* __fastcall JunYe_TValueListEditor::getGender_Eng(){
    TStringList *stringlist = new TStringList;
	stringlist->Add("Male");
	stringlist->Add("Female");
	return stringlist;
}
TStringList* __fastcall JunYe_TValueListEditor::getGender_Chi(){
    TStringList *stringlist = new TStringList;
	stringlist->Add("¨k");
	stringlist->Add("¤k");
	return stringlist;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void __fastcall JunYe_TCheckListBox::deleteAllRow(TCheckListBox* List){
	int rowcount = List->Items->Count;
	for(int i = 0; i < rowcount; i++){
		List->Items->Delete(0);
	}
}
bool __fastcall JunYe_TCheckListBox::deleteRow(TCheckListBox* List, String Value){
	int num = List->Items->IndexOf(Trim(Value));
	if(num != -1){
		List->Items->Delete(num);
		return true;
	}
	return false;
}
bool __fastcall JunYe_TCheckListBox::addItem(TCheckListBox* List, String Value){
	Value = Trim(Value);
	if(List->Items->IndexOf(Value) == -1){
		List->Items->Add(Value);
		if(List->Items->Count > 4)List->Width = 140;
		return true;
	}
	return false;
}
void __fastcall JunYe_TCheckListBox::changeItemValue(TCheckListBox* List, String Item, bool Value){
	if(List->Items->IndexOf(Item) != -1)
		List->Checked[List->Items->IndexOf(Item)] = Value;
	else{
		BugReport("Function Error : JunYe_TCheckListBox::changeItemValue");
		BugReport("The Item ("+Item+") is not exist!!");
		BugReport("----------------------------------------------------------");
	}
}
